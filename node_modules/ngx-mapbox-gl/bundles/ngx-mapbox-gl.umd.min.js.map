{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-mapbox-gl/lib/map/map.service.ts","ng://ngx-mapbox-gl/lib/control/control.component.ts","ng://ngx-mapbox-gl/lib/control/attribution-control.directive.ts","ng://ngx-mapbox-gl/lib/control/fullscreen-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geocoder-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geolocate-control.directive.ts","ng://ngx-mapbox-gl/lib/control/navigation-control.directive.ts","ng://ngx-mapbox-gl/lib/control/scale-control.directive.ts","ng://ngx-mapbox-gl/lib/layer/layer.component.ts","ng://ngx-mapbox-gl/lib/marker/marker.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/geojson-source.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/feature.component.ts","ng://ngx-mapbox-gl/lib/draggable/draggable.directive.ts","ng://ngx-mapbox-gl/lib/image/image.component.ts","ng://ngx-mapbox-gl/lib/map/map.component.ts","ng://ngx-mapbox-gl/lib/markers-for-clusters/markers-for-clusters.component.ts","ng://ngx-mapbox-gl/lib/popup/popup.component.ts","ng://ngx-mapbox-gl/lib/source/canvas-source.component.ts","ng://ngx-mapbox-gl/lib/source/image-source.component.ts","ng://ngx-mapbox-gl/lib/source/raster-source.component.ts","ng://ngx-mapbox-gl/lib/source/vector-source.component.ts","ng://ngx-mapbox-gl/lib/source/video-source.component.ts","ng://ngx-mapbox-gl/lib/ngx-mapbox-gl.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","MAPBOX_API_KEY","InjectionToken","MapService","zone","MglResizeEventEmitter","mapCreated","AsyncSubject","mapLoaded","layerIdsToRemove","sourceIdsToRemove","markersToRemove","popupsToRemove","imageIdsToRemove","subscription","Subscription","mapCreated$","asObservable","mapLoaded$","setup","options","_this","onStable","pipe","first","subscribe","MapboxGl","accessToken","customMapboxApiUrl","createMap","mapOptions","hookEvents","mapEvents","undefined","complete","destroyMap","mapInstance","unsubscribe","remove","updateMinZoom","minZoom","runOutsideAngular","setMinZoom","updateMaxZoom","maxZoom","setMaxZoom","updateScrollZoom","status","scrollZoom","enable","disable","updateDragRotate","dragRotate","updateTouchZoomRotate","touchZoomRotate","updateDoubleClickZoom","doubleClickZoom","updateKeyboard","keyboard","updateDragPan","dragPan","updateBoxZoom","boxZoom","updateStyle","style","setStyle","updateMaxBounds","maxBounds","setMaxBounds","changeCanvasCursor","cursor","getCanvasContainer","queryRenderedFeatures","pointOrBox","parameters","panTo","center","move","movingMethod","movingOptions","zoom","bearing","pitch","getZoom","getCenter","getBearing","getPitch","addLayer","layer","bindEvents","before","keys","layerOptions","forEach","key","tkey","layerEvents","click","observers","on","id","evt","run","emit","mouseEnter","mouseLeave","mouseMove","removeLayer","layerId","addMarker","marker","offset","markersOptions","anchor","draggable","element","childNodes","markerInstance","MapboxGl.Marker","markersEvents","dragStart","event","target","drag","dragEnd","lngLat","feature","setLngLat","addTo","removeMarker","createPopup","popup","popupOptions","popupInstance","MapboxGl.Popup","setDOMContent","popupEvents","close","open","addPopupToMap","skipOpenEvent","_listeners","addPopupToMarker","setPopup","removePopupFromMap","skipCloseEvent","removePopupFromMarker","addControl","control","position","removeControl","loadAndAddImage","imageId","url","loadImage","error","image","addImage","data","removeImage","addSource","sourceId","source","getSource","removeSource","setAllLayerPaintProperty","paint","setPaintProperty","setAllLayerLayoutProperty","layout","setLayoutProperty","setLayerFilter","filter","setFilter","setLayerBefore","beforeId","moveLayer","setLayerZoomRange","fitBounds","bounds","fitScreenCoordinates","points","applyChanges","removeLayers","removeSources","removeMarkers","removePopups","removeImages","NgZone","assertNotInAngularZone","MapboxGl.Map","window","test","navigator","userAgent","subChanges","onMicrotaskEmpty","subResize","resizeEvent","resize","add","_b","tslib_1.__values","_c","events","load","mouseDown","mouseUp","dblClick","mouseOver","mouseOut","contextMenu","touchStart","touchEnd","touchMove","touchCancel","wheel","moveStart","moveEnd","zoomStart","zoomEvt","zoomEnd","rotateStart","rotate","rotateEnd","pitchStart","pitchEvt","pitchEnd","boxZoomStart","boxZoomEnd","boxZoomCancel","webGlContextLost","webGlContextRestored","render","styleData","sourceData","dataLoading","styleDataLoading","sourceDataLoading","styleImageMissing","idle","obj","prop","split","shift","toString","Injectable","Optional","type","Inject","args","decorators","CustomControl","container","onAdd","onRemove","removeChild","getDefaultPosition","ControlComponent","ngAfterContentInit","content","nativeElement","ngOnDestroy","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","ViewChild","static","AttributionControlDirective","Error","compact","customAttribution","AttributionControl","Directive","Host","FullscreenControlDirective","FullscreenControl","MAPBOX_GEOCODER_API_KEY","GeocoderControlDirective","clear","EventEmitter","loading","results","proximity","countries","placeholder","bbox","types","flyTo","minLength","limit","language","localGeocoder","geocoder","MapboxGeocoder","searchInput","query","ngOnChanges","changes","isFirstChange","setProximity","currentValue","lastResultId","Output","GeolocateControlDirective","geolocate","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","GeolocateControl","NavigationControlDirective","showCompass","showZoom","NavigationControl","ScaleControlDirective","unit","setUnit","maxWidth","ScaleControl","LayerComponent","layerAdded","ngOnInit","sub","switchMap","fromEvent","mapTo","getLayer","startWith","init","minzoom","maxzoom","metadata","source-layer","sourceLayer","MarkerComponent","setDraggable","popupShown","getPopup","ngAfterViewInit","togglePopup","updateCoordinates","coordinates","encapsulation","ViewEncapsulation","None","GeoJSONSourceComponent","updateFeatureData","Subject","sourceAdded","featureIdCounter","features","buffer","tolerance","generateId","cluster","clusterRadius","clusterMaxZoom","clusterProperties","setData","getClusterExpansionZoom","clusterId","getClusterChildren","getClusterLeaves","_addFeature","_removeFeature","collection","index","indexOf","splice","_getNewFeatureId","debounceTime","FeatureComponent","geometry","properties","forwardRef","DraggableDirective","destroyed$","ReplaySubject","enter$","leave$","updateCoords","console","warn","markerElement","children","bind","handleDraggable","moving","inside","mouseUp$","dragStart$","takeUntil","filterFeature","tap","dragging$","dragEnd$","take","lng","lat","point","layers","ImageComponent","loaded","isAdded","isAdding","hasImage","_a","error_1","MapComponent","defineProperty","mapContainer","hash","interactive","bearingSnap","pitchWithRotate","clickTolerance","classes","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","refreshExpiredTiles","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","antialias","locale","cursorStyle","toPromise","centerWithPanTo","panToOptions","providers","PointDirective","ClusterPointDirective","uniqId","MarkersForClustersComponent","ChangeDetectorRef","sourceDataType","isSourceLoaded","merge","updateCluster","trackByClusterPoint","_index","clusterPoint","params","pointTpl","clusterPoints","markForCheck","preserveWhitespaces","ContentChild","read","TemplateRef","PopupComponent","newlngLat","popupInstanceTmp","isOpen","previousMarker","previousValue","addPopup","closeButton","closeOnClick","className","CanvasSourceComponent","canvas","animate","ImageSourceComponent","updateImage","imageSource","RasterSourceComponent","tiles","tileSize","VectorSourceComponent","VideoSourceComponent","urls","NgxMapboxGLModule","withConfig","config","ngModule","provide","useValue","geocoderAccessToken","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter, Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport * as MapboxGl from 'mapbox-gl';\nimport { AsyncSubject, Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { MapEvent, MapImageData, MapImageOptions } from './map.types';\n\nexport const MAPBOX_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport abstract class MglResizeEventEmitter {\n  abstract resizeEvent: Observable<void>;\n}\n\nexport interface SetupMap {\n  accessToken?: string;\n  customMapboxApiUrl?: string;\n  mapOptions: any; // MapboxGl.MapboxOptions\n  mapEvents: MapEvent;\n}\n\nexport interface SetupLayer {\n  layerOptions: MapboxGl.Layer;\n  layerEvents: {\n    click: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseEnter: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseLeave: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseMove: EventEmitter<MapboxGl.MapMouseEvent>;\n  };\n}\n\nexport interface SetupPopup {\n  popupOptions: MapboxGl.PopupOptions;\n  popupEvents: {\n    open: EventEmitter<void>;\n    close: EventEmitter<void>;\n  };\n}\n\nexport interface SetupMarker {\n  markersOptions: {\n    offset?: MapboxGl.PointLike;\n    anchor?: MapboxGl.Anchor;\n    draggable?: boolean;\n    element: HTMLElement;\n    feature?: GeoJSON.Feature<GeoJSON.Point>;\n    lngLat?: MapboxGl.LngLatLike;\n  };\n  markersEvents: {\n    dragStart: EventEmitter<MapboxGl.Marker>;\n    drag: EventEmitter<MapboxGl.Marker>;\n    dragEnd: EventEmitter<MapboxGl.Marker>;\n  };\n}\n\nexport type MovingOptions =\n  | MapboxGl.FlyToOptions\n  | (MapboxGl.AnimationOptions & MapboxGl.CameraOptions)\n  | MapboxGl.CameraOptions;\n\n@Injectable()\nexport class MapService {\n  mapInstance: MapboxGl.Map;\n  mapCreated$: Observable<void>;\n  mapLoaded$: Observable<void>;\n  mapEvents: MapEvent;\n\n  private mapCreated = new AsyncSubject<void>();\n  private mapLoaded = new AsyncSubject<void>();\n  private layerIdsToRemove: string[] = [];\n  private sourceIdsToRemove: string[] = [];\n  private markersToRemove: MapboxGl.Marker[] = [];\n  private popupsToRemove: MapboxGl.Popup[] = [];\n  private imageIdsToRemove: string[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private zone: NgZone,\n    @Optional() @Inject(MAPBOX_API_KEY) private readonly MAPBOX_API_KEY: string,\n    @Optional() private readonly MglResizeEventEmitter: MglResizeEventEmitter\n  ) {\n    this.mapCreated$ = this.mapCreated.asObservable();\n    this.mapLoaded$ = this.mapLoaded.asObservable();\n  }\n\n  setup(options: SetupMap) {\n    // Need onStable to wait for a potential @angular/route transition to end\n    this.zone.onStable.pipe(first()).subscribe(() => {\n      // Workaround rollup issue\n      this.assign(MapboxGl, 'accessToken', options.accessToken || this.MAPBOX_API_KEY);\n      if (options.customMapboxApiUrl) {\n        this.assign(MapboxGl, 'config.API_URL', options.customMapboxApiUrl);\n      }\n      this.createMap(options.mapOptions);\n      this.hookEvents(options.mapEvents);\n      this.mapEvents = options.mapEvents;\n      this.mapCreated.next(undefined);\n      this.mapCreated.complete();\n    });\n  }\n\n  destroyMap() {\n    if (this.mapInstance) {\n      this.subscription.unsubscribe();\n      this.mapInstance.remove();\n    }\n  }\n\n  updateMinZoom(minZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMinZoom(minZoom);\n    });\n  }\n\n  updateMaxZoom(maxZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxZoom(maxZoom);\n    });\n  }\n\n  updateScrollZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.scrollZoom.enable() : this.mapInstance.scrollZoom.disable();\n    });\n  }\n\n  updateDragRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragRotate.enable() : this.mapInstance.dragRotate.disable();\n    });\n  }\n\n  updateTouchZoomRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.touchZoomRotate.enable() : this.mapInstance.touchZoomRotate.disable();\n    });\n  }\n\n  updateDoubleClickZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.doubleClickZoom.enable() : this.mapInstance.doubleClickZoom.disable();\n    });\n  }\n\n  updateKeyboard(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.keyboard.enable() : this.mapInstance.keyboard.disable();\n    });\n  }\n\n  updateDragPan(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragPan.enable() : this.mapInstance.dragPan.disable();\n    });\n  }\n\n  updateBoxZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.boxZoom.enable() : this.mapInstance.boxZoom.disable();\n    });\n  }\n\n  updateStyle(style: MapboxGl.Style) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setStyle(style);\n    });\n  }\n\n  updateMaxBounds(maxBounds: MapboxGl.LngLatBoundsLike) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxBounds(maxBounds);\n    });\n  }\n\n  changeCanvasCursor(cursor: string) {\n    const canvas = this.mapInstance.getCanvasContainer();\n    canvas.style.cursor = cursor;\n  }\n\n  queryRenderedFeatures(\n    pointOrBox?: MapboxGl.PointLike | [MapboxGl.PointLike, MapboxGl.PointLike],\n    parameters?: { layers?: string[]; filter?: any[] }\n  ): GeoJSON.Feature<GeoJSON.GeometryObject>[] {\n    return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);\n  }\n\n  panTo(center: MapboxGl.LngLatLike, options?: MapboxGl.AnimationOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.panTo(center, options);\n    });\n  }\n\n  move(\n    movingMethod: 'jumpTo' | 'easeTo' | 'flyTo',\n    movingOptions?: MovingOptions,\n    zoom?: number,\n    center?: MapboxGl.LngLatLike,\n    bearing?: number,\n    pitch?: number\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      (<any>this.mapInstance[movingMethod])({\n        ...movingOptions,\n        zoom: zoom ? zoom : this.mapInstance.getZoom(),\n        center: center ? center : this.mapInstance.getCenter(),\n        bearing: bearing ? bearing : this.mapInstance.getBearing(),\n        pitch: pitch ? pitch : this.mapInstance.getPitch()\n      });\n    });\n  }\n\n  addLayer(layer: SetupLayer, bindEvents: boolean, before?: string) {\n    this.zone.runOutsideAngular(() => {\n      Object.keys(layer.layerOptions).forEach((key: string) => {\n        const tkey = <keyof MapboxGl.Layer>key;\n        if (layer.layerOptions[tkey] === undefined) {\n          delete layer.layerOptions[tkey];\n        }\n      });\n      this.mapInstance.addLayer(layer.layerOptions, before);\n      if (bindEvents) {\n        if (layer.layerEvents.click.observers.length) {\n          this.mapInstance.on('click', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.click.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseEnter.observers.length) {\n          this.mapInstance.on('mouseenter', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseEnter.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseLeave.observers.length) {\n          this.mapInstance.on('mouseleave', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseLeave.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseMove.observers.length) {\n          this.mapInstance.on('mousemove', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseMove.emit(evt);\n            });\n          });\n        }\n      }\n    });\n  }\n\n  removeLayer(layerId: string) {\n    this.layerIdsToRemove.push(layerId);\n  }\n\n  addMarker(marker: SetupMarker) {\n    const options: MapboxGl.MarkerOptions = {\n      offset: marker.markersOptions.offset,\n      anchor: marker.markersOptions.anchor,\n      draggable: !!marker.markersOptions.draggable\n    };\n    if (marker.markersOptions.element.childNodes.length > 0) {\n      options.element = marker.markersOptions.element;\n    }\n    const markerInstance = new MapboxGl.Marker(options);\n    if (marker.markersEvents.dragStart.observers.length) {\n      markerInstance.on('dragstart', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragStart.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.drag.observers.length) {\n      markerInstance.on('drag', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.drag.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.dragEnd.observers.length) {\n      markerInstance.on('dragend', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragEnd.emit(event.target))\n      );\n    }\n    const lngLat: MapboxGl.LngLatLike = marker.markersOptions.feature\n      ? <[number, number]>marker.markersOptions.feature.geometry!.coordinates\n      : marker.markersOptions.lngLat!;\n    markerInstance.setLngLat(lngLat);\n    return this.zone.runOutsideAngular(() => {\n      markerInstance.addTo(this.mapInstance);\n      return markerInstance;\n    });\n  }\n\n  removeMarker(marker: MapboxGl.Marker) {\n    this.markersToRemove.push(marker);\n  }\n\n  createPopup(popup: SetupPopup, element: Node) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(popup.popupOptions).forEach(\n        (key) => (<any>popup.popupOptions)[key] === undefined && delete (<any>popup.popupOptions)[key]\n      );\n      const popupInstance = new MapboxGl.Popup(popup.popupOptions);\n      popupInstance.setDOMContent(element);\n      if (popup.popupEvents.close.observers.length) {\n        popupInstance.on('close', () => {\n          this.zone.run(() => {\n            popup.popupEvents.close.emit();\n          });\n        });\n      }\n      if (popup.popupEvents.open.observers.length) {\n        popupInstance.on('open', () => {\n          this.zone.run(() => {\n            popup.popupEvents.open.emit();\n          });\n        });\n      }\n      return popupInstance;\n    });\n  }\n\n  addPopupToMap(popup: MapboxGl.Popup, lngLat: MapboxGl.LngLatLike, skipOpenEvent = false) {\n    return this.zone.runOutsideAngular(() => {\n      if (skipOpenEvent && (<any>popup)._listeners) {\n        delete (<any>popup)._listeners['open'];\n      }\n      popup.setLngLat(lngLat);\n      popup.addTo(this.mapInstance);\n    });\n  }\n\n  addPopupToMarker(marker: MapboxGl.Marker, popup: MapboxGl.Popup) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(popup);\n    });\n  }\n\n  removePopupFromMap(popup: MapboxGl.Popup, skipCloseEvent = false) {\n    if (skipCloseEvent && (<any>popup)._listeners) {\n      delete (<any>popup)._listeners['close'];\n    }\n    this.popupsToRemove.push(popup);\n  }\n\n  removePopupFromMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(undefined);\n    });\n  }\n\n  addControl(\n    control: MapboxGl.Control | MapboxGl.IControl,\n    position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addControl(<any>control, position);\n    });\n  }\n\n  removeControl(control: MapboxGl.Control | MapboxGl.IControl) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.removeControl(<any>control);\n    });\n  }\n\n  async loadAndAddImage(imageId: string, url: string, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      return new Promise((resolve, reject) => {\n        this.mapInstance.loadImage(url, (error: { status: number } | null, image: ImageData) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          this.addImage(imageId, image, options);\n          resolve();\n        });\n      });\n    });\n  }\n\n  addImage(imageId: string, data: MapImageData, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addImage(imageId, <any>data, options);\n    });\n  }\n\n  removeImage(imageId: string) {\n    this.imageIdsToRemove.push(imageId);\n  }\n\n  addSource(sourceId: string, source: MapboxGl.AnySourceData) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(source).forEach((key) => (<any>source)[key] === undefined && delete (<any>source)[key]);\n      this.mapInstance.addSource(sourceId, source);\n    });\n  }\n\n  getSource<T>(sourceId: string) {\n    return <T>(<any>this.mapInstance.getSource(sourceId));\n  }\n\n  removeSource(sourceId: string) {\n    this.sourceIdsToRemove.push(sourceId);\n  }\n\n  setAllLayerPaintProperty(\n    layerId: string,\n    paint:\n      | MapboxGl.BackgroundPaint\n      | MapboxGl.FillPaint\n      | MapboxGl.FillExtrusionPaint\n      | MapboxGl.LinePaint\n      | MapboxGl.SymbolPaint\n      | MapboxGl.RasterPaint\n      | MapboxGl.CirclePaint\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(paint).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setPaintProperty(layerId, key, (<any>paint)[key]);\n      });\n    });\n  }\n\n  setAllLayerLayoutProperty(\n    layerId: string,\n    layout:\n      | MapboxGl.BackgroundLayout\n      | MapboxGl.FillLayout\n      | MapboxGl.FillExtrusionLayout\n      | MapboxGl.LineLayout\n      | MapboxGl.SymbolLayout\n      | MapboxGl.RasterLayout\n      | MapboxGl.CircleLayout\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(layout).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setLayoutProperty(layerId, key, (<any>layout)[key]);\n      });\n    });\n  }\n\n  setLayerFilter(layerId: string, filter: any[]) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setFilter(layerId, filter);\n    });\n  }\n\n  setLayerBefore(layerId: string, beforeId: string) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.moveLayer(layerId, beforeId);\n    });\n  }\n\n  setLayerZoomRange(layerId: string, minZoom?: number, maxZoom?: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);\n    });\n  }\n\n  fitBounds(bounds: MapboxGl.LngLatBoundsLike, options?: MapboxGl.FitBoundsOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitBounds(bounds, options);\n    });\n  }\n\n  fitScreenCoordinates(\n    points: [MapboxGl.PointLike, MapboxGl.PointLike],\n    bearing: number,\n    options?: MapboxGl.AnimationOptions & MapboxGl.CameraOptions\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitScreenCoordinates(points[0], points[1], bearing, options);\n    });\n  }\n\n  applyChanges() {\n    this.zone.runOutsideAngular(() => {\n      this.removeLayers();\n      this.removeSources();\n      this.removeMarkers();\n      this.removePopups();\n      this.removeImages();\n    });\n  }\n\n  private createMap(options: MapboxGl.MapboxOptions) {\n    NgZone.assertNotInAngularZone();\n    Object.keys(options).forEach((key: string) => {\n      const tkey = <keyof MapboxGl.MapboxOptions>key;\n      if (options[tkey] === undefined) {\n        delete options[tkey];\n      }\n    });\n    this.mapInstance = new MapboxGl.Map(options);\n\n    const isIEorEdge = window && /msie\\s|trident\\/|edge\\//i.test(window.navigator.userAgent);\n    if (isIEorEdge) {\n      this.mapInstance.setStyle(options.style!);\n    }\n\n    const subChanges = this.zone.onMicrotaskEmpty.subscribe(() => this.applyChanges());\n    if (this.MglResizeEventEmitter) {\n      const subResize = this.MglResizeEventEmitter.resizeEvent.subscribe(() => {\n        this.mapInstance.resize();\n      });\n      this.subscription.add(subResize);\n    }\n    this.subscription.add(subChanges);\n  }\n\n  private removeLayers() {\n    for (const layerId of this.layerIdsToRemove) {\n      this.mapInstance.removeLayer(layerId);\n    }\n    this.layerIdsToRemove = [];\n  }\n\n  private removeSources() {\n    for (const sourceId of this.sourceIdsToRemove) {\n      this.mapInstance.removeSource(sourceId);\n    }\n    this.sourceIdsToRemove = [];\n  }\n\n  private removeMarkers() {\n    for (const marker of this.markersToRemove) {\n      marker.remove();\n    }\n    this.markersToRemove = [];\n  }\n\n  private removePopups() {\n    for (const popup of this.popupsToRemove) {\n      popup.remove();\n    }\n    this.popupsToRemove = [];\n  }\n\n  private removeImages() {\n    for (const imageId of this.imageIdsToRemove) {\n      this.mapInstance.removeImage(imageId);\n    }\n    this.imageIdsToRemove = [];\n  }\n\n  private hookEvents(events: MapEvent) {\n    this.mapInstance.on('load', () => {\n      this.mapLoaded.next(undefined);\n      this.mapLoaded.complete();\n      this.zone.run(() => events.load.emit(this.mapInstance));\n    });\n    if (events.resize.observers.length) {\n      this.mapInstance.on('resize', () => this.zone.run(() => events.resize.emit()));\n    }\n    if (events.remove.observers.length) {\n      this.mapInstance.on('remove', () => this.zone.run(() => events.remove.emit()));\n    }\n    if (events.mouseDown.observers.length) {\n      this.mapInstance.on('mousedown', (evt: MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.mouseDown.emit(evt))\n      );\n    }\n    if (events.mouseUp.observers.length) {\n      this.mapInstance.on('mouseup', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseUp.emit(evt)));\n    }\n    if (events.mouseMove.observers.length) {\n      this.mapInstance.on('mousemove', (evt: MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.mouseMove.emit(evt))\n      );\n    }\n    if (events.click.observers.length) {\n      this.mapInstance.on('click', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.click.emit(evt)));\n    }\n    if (events.dblClick.observers.length) {\n      this.mapInstance.on('dblclick', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.dblClick.emit(evt)));\n    }\n    if (events.mouseEnter.observers.length) {\n      this.mapInstance.on('mouseenter', (evt: MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.mouseEnter.emit(evt))\n      );\n    }\n    if (events.mouseLeave.observers.length) {\n      this.mapInstance.on('mouseleave', (evt: MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.mouseLeave.emit(evt))\n      );\n    }\n    if (events.mouseOver.observers.length) {\n      this.mapInstance.on('mouseover', (evt: MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.mouseOver.emit(evt))\n      );\n    }\n    if (events.mouseOut.observers.length) {\n      this.mapInstance.on('mouseout', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOut.emit(evt)));\n    }\n    if (events.contextMenu.observers.length) {\n      this.mapInstance.on('contextmenu', (evt: MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.contextMenu.emit(evt))\n      );\n    }\n    if (events.touchStart.observers.length) {\n      this.mapInstance.on('touchstart', (evt: MapboxGl.MapTouchEvent) =>\n        this.zone.run(() => events.touchStart.emit(evt))\n      );\n    }\n    if (events.touchEnd.observers.length) {\n      this.mapInstance.on('touchend', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchEnd.emit(evt)));\n    }\n    if (events.touchMove.observers.length) {\n      this.mapInstance.on('touchmove', (evt: MapboxGl.MapTouchEvent) =>\n        this.zone.run(() => events.touchMove.emit(evt))\n      );\n    }\n    if (events.touchCancel.observers.length) {\n      this.mapInstance.on('touchcancel', (evt: MapboxGl.MapTouchEvent) =>\n        this.zone.run(() => events.touchCancel.emit(evt))\n      );\n    }\n    if (events.wheel.observers.length) {\n      // MapboxGl.MapWheelEvent\n      this.mapInstance.on('wheel', (evt: any) => this.zone.run(() => events.wheel.emit(evt)));\n    }\n    if (events.moveStart.observers.length) {\n      this.mapInstance.on('movestart', (evt: DragEvent) => this.zone.run(() => events.moveStart.emit(evt)));\n    }\n    if (events.move.observers.length) {\n      this.mapInstance.on('move', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.move.emit(evt))\n      );\n    }\n    if (events.moveEnd.observers.length) {\n      this.mapInstance.on('moveend', (evt: DragEvent) => this.zone.run(() => events.moveEnd.emit(evt)));\n    }\n    if (events.dragStart.observers.length) {\n      this.mapInstance.on('dragstart', (evt: DragEvent) => this.zone.run(() => events.dragStart.emit(evt)));\n    }\n    if (events.drag.observers.length) {\n      this.mapInstance.on('drag', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.drag.emit(evt))\n      );\n    }\n    if (events.dragEnd.observers.length) {\n      this.mapInstance.on('dragend', (evt: DragEvent) => this.zone.run(() => events.dragEnd.emit(evt)));\n    }\n    if (events.zoomStart.observers.length) {\n      this.mapInstance.on('zoomstart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.zoomStart.emit(evt))\n      );\n    }\n    if (events.zoomEvt.observers.length) {\n      this.mapInstance.on('zoom', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.zoomEvt.emit(evt))\n      );\n    }\n    if (events.zoomEnd.observers.length) {\n      this.mapInstance.on('zoomend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.zoomEnd.emit(evt))\n      );\n    }\n    if (events.rotateStart.observers.length) {\n      this.mapInstance.on('rotatestart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.rotateStart.emit(evt))\n      );\n    }\n    if (events.rotate.observers.length) {\n      this.mapInstance.on('rotate', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.rotate.emit(evt))\n      );\n    }\n    if (events.rotateEnd.observers.length) {\n      this.mapInstance.on('rotateend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) =>\n        this.zone.run(() => events.rotateEnd.emit(evt))\n      );\n    }\n    if (events.pitchStart.observers.length) {\n      this.mapInstance.on('pitchstart', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchStart.emit(evt)));\n    }\n    if (events.pitchEvt.observers.length) {\n      this.mapInstance.on('pitch', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEvt.emit(evt)));\n    }\n    if (events.pitchEnd.observers.length) {\n      this.mapInstance.on('pitchend', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEnd.emit(evt)));\n    }\n    if (events.boxZoomStart.observers.length) {\n      this.mapInstance.on('boxzoomstart', (evt: MapboxGl.MapBoxZoomEvent) =>\n        this.zone.run(() => events.boxZoomStart.emit(evt))\n      );\n    }\n    if (events.boxZoomEnd.observers.length) {\n      this.mapInstance.on('boxzoomend', (evt: MapboxGl.MapBoxZoomEvent) =>\n        this.zone.run(() => events.boxZoomEnd.emit(evt))\n      );\n    }\n    if (events.boxZoomCancel.observers.length) {\n      this.mapInstance.on('boxzoomcancel', (evt: MapboxGl.MapBoxZoomEvent) =>\n        this.zone.run(() => events.boxZoomCancel.emit(evt))\n      );\n    }\n    if (events.webGlContextLost.observers.length) {\n      this.mapInstance.on('webglcontextlost', () => this.zone.run(() => events.webGlContextLost.emit()));\n    }\n    if (events.webGlContextRestored.observers.length) {\n      this.mapInstance.on('webglcontextrestored', () => this.zone.run(() => events.webGlContextRestored.emit()));\n    }\n    if (events.render.observers.length) {\n      this.mapInstance.on('render', () => this.zone.run(() => events.render.emit()));\n    }\n    if (events.error.observers.length) {\n      this.mapInstance.on('error', (evt: MapboxGl.ErrorEvent) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.data.observers.length) {\n      this.mapInstance.on('data', (evt: MapboxGl.EventData) => this.zone.run(() => events.data.emit(evt)));\n    }\n    if (events.styleData.observers.length) {\n      this.mapInstance.on('styledata', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleData.emit(evt)));\n    }\n    if (events.sourceData.observers.length) {\n      this.mapInstance.on('sourcedata', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceData.emit(evt)));\n    }\n    if (events.dataLoading.observers.length) {\n      this.mapInstance.on('dataloading', (evt: MapboxGl.EventData) =>\n        this.zone.run(() => events.dataLoading.emit(evt))\n      );\n    }\n    if (events.styleDataLoading.observers.length) {\n      this.mapInstance.on('styledataloading', (evt: MapboxGl.EventData) =>\n        this.zone.run(() => events.styleDataLoading.emit(evt))\n      );\n    }\n    if (events.sourceDataLoading.observers.length) {\n      this.mapInstance.on('sourcedataloading', (evt: MapboxGl.EventData) =>\n        this.zone.run(() => events.sourceDataLoading.emit(evt))\n      );\n    }\n    if (events.styleImageMissing.observers.length) {\n      this.mapInstance.on(<any>'styleimagemissing', (evt: { id: string }) =>\n        this.zone.run(() => events.styleImageMissing.emit(evt))\n      );\n    }\n    if (events.idle.observers.length) {\n      this.mapInstance.on('idle', () => this.zone.run(() => events.idle.emit()));\n    }\n  }\n\n  // TODO move this elsewhere\n  private assign(obj: any, prop: any, value: any) {\n    if (typeof prop === 'string') {\n      // tslint:disable-next-line:no-parameter-reassignment\n      prop = prop.split('.');\n    }\n    if (prop.length > 1) {\n      const e = prop.shift();\n      this.assign((obj[e] = Object.prototype.toString.call(obj[e]) === '[object Object]' ? obj[e] : {}), prop, value);\n    } else {\n      obj[prop[0]] = value;\n    }\n  }\n}\n","import { Control, IControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\n\nexport class CustomControl implements IControl {\n  constructor(private container: HTMLElement) {}\n\n  onAdd() {\n    return this.container;\n  }\n\n  onRemove() {\n    return this.container.parentNode!.removeChild(this.container);\n  }\n\n  getDefaultPosition() {\n    return 'top-right';\n  }\n}\n\n@Component({\n  selector: 'mgl-control',\n  template: '<div class=\"mapboxgl-ctrl\" #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnDestroy, AfterContentInit {\n  /* Init inputs */\n  @Input() position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  control: Control | IControl;\n\n  constructor(private MapService: MapService) {}\n\n  ngAfterContentInit() {\n    if (this.content.nativeElement.childNodes.length) {\n      this.control = new CustomControl(this.content.nativeElement);\n      this.MapService.mapCreated$.subscribe(() => {\n        this.MapService.addControl(this.control!, this.position);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.control) {\n      this.MapService.removeControl(this.control);\n    }\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { AttributionControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglAttribution]'\n})\nexport class AttributionControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() compact?: boolean;\n  @Input() customAttribution?: string | string[];\n\n  constructor(private MapService: MapService, @Host() private ControlComponent: ControlComponent) {}\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { compact?: boolean; customAttribution?: string | string[] } = {};\n      if (this.compact !== undefined) {\n        options.compact = this.compact;\n      }\n      if (this.customAttribution !== undefined) {\n        options.customAttribution = this.customAttribution;\n      }\n      this.ControlComponent.control = new AttributionControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { FullscreenControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglFullscreen]'\n})\nexport class FullscreenControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() container?: HTMLElement;\n\n  constructor(private MapService: MapService, @Host() private ControlComponent: ControlComponent) {}\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      this.ControlComponent.control = new FullscreenControl({ container: this.container });\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { GeocoderEvent } from '../map/map.types';\nimport { ControlComponent } from './control.component';\n\n// @ts-ignore\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nexport const MAPBOX_GEOCODER_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport interface LngLatLiteral {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Results extends GeoJSON.FeatureCollection<GeoJSON.Point> {\n  attribution: string;\n  query: string[];\n}\n\nexport interface Result extends GeoJSON.Feature<GeoJSON.Point> {\n  bbox: [number, number, number, number];\n  center: number[];\n  place_name: string;\n  place_type: string[];\n  relevance: number;\n  text: string;\n  address: string;\n  context: any[];\n}\n\n@Directive({\n  selector: '[mglGeocoder]'\n})\nexport class GeocoderControlDirective implements AfterContentInit, OnChanges, GeocoderEvent {\n  /* Init inputs */\n  @Input() countries?: string;\n  @Input() placeholder?: string;\n  @Input() zoom?: number;\n  @Input() bbox?: [number, number, number, number];\n  @Input() types?: string;\n  @Input() flyTo?: boolean;\n  @Input() minLength?: number;\n  @Input() limit?: number;\n  @Input() language?: string;\n  @Input() accessToken?: string;\n  @Input() filter?: (feature: Result) => boolean;\n  @Input() localGeocoder?: (query: string) => Result[];\n\n  /* Dynamic inputs */\n  @Input() proximity?: LngLatLiteral;\n  @Input() searchInput?: string;\n\n  @Output() clear = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<{ query: string }>();\n  @Output() results = new EventEmitter<Results>();\n  @Output() result = new EventEmitter<{ result: Result }>();\n  @Output() error = new EventEmitter<any>();\n\n  geocoder: any;\n\n  private lastResultId?: string | number;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone,\n    @Host() private ControlComponent: ControlComponent,\n    @Optional() @Inject(MAPBOX_GEOCODER_API_KEY) private readonly MAPBOX_GEOCODER_API_KEY: string\n  ) {}\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        proximity: this.proximity,\n        countries: this.countries,\n        placeholder: this.placeholder,\n        zoom: this.zoom,\n        bbox: this.bbox,\n        types: this.types,\n        flyTo: this.flyTo,\n        minLength: this.minLength,\n        limit: this.limit,\n        language: this.language,\n        filter: this.filter,\n        localGeocoder: this.localGeocoder,\n        accessToken: this.accessToken || this.MAPBOX_GEOCODER_API_KEY\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.geocoder = new MapboxGeocoder(options);\n      this.hookEvents(this);\n      this.addControl();\n    });\n    if (this.searchInput) {\n      this.MapService.mapLoaded$.subscribe(() => {\n        this.geocoder.query(this.searchInput);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.geocoder) {\n      return;\n    }\n    if (changes.proximity && !changes.proximity.isFirstChange()) {\n      this.geocoder.setProximity(changes.proximity.currentValue);\n    }\n    if (changes.searchInput) {\n      this.geocoder.query(this.searchInput);\n    }\n  }\n\n  private addControl() {\n    this.ControlComponent.control = this.geocoder;\n    this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n  }\n\n  private hookEvents(events: GeocoderEvent) {\n    if (events.results.observers.length) {\n      this.geocoder.on('results', (evt: Results) => this.zone.run(() => events.results.emit(evt)));\n    }\n    if (events.result.observers.length) {\n      this.geocoder.on('result', (evt: { result: Result }) => {\n        // Workaroud issue https://github.com/mapbox/mapbox-gl-geocoder/issues/99\n        if (this.lastResultId !== evt.result.id) {\n          this.lastResultId = evt.result.id;\n          this.zone.run(() => events.result.emit(evt));\n        }\n      });\n    }\n    if (events.error.observers.length) {\n      this.geocoder.on('error', (evt: any) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.loading.observers.length) {\n      this.geocoder.on('loading', (evt: { query: string }) => this.zone.run(() => events.loading.emit(evt)));\n    }\n    if (events.clear.observers.length) {\n      this.geocoder.on('clear', () => this.zone.run(() => events.clear.emit()));\n    }\n  }\n}\n","import { AfterContentInit, Directive, EventEmitter, Host, Input, Output } from '@angular/core';\nimport { GeolocateControl, FitBoundsOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglGeolocate]'\n})\nexport class GeolocateControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() positionOptions?: PositionOptions;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() trackUserLocation?: boolean;\n  @Input() showUserLocation?: boolean;\n\n  @Output() geolocate: EventEmitter<Position> = new EventEmitter<Position>();\n\n  constructor(private MapService: MapService, @Host() private ControlComponent: ControlComponent) {}\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        positionOptions: this.positionOptions,\n        fitBoundsOptions: this.fitBoundsOptions,\n        trackUserLocation: this.trackUserLocation,\n        showUserLocation: this.showUserLocation\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.ControlComponent.control = new GeolocateControl(options);\n      this.ControlComponent.control.on('geolocate', (data: Position) => this.geolocate.emit(data));\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { AfterContentInit, Directive, Host, Input } from '@angular/core';\nimport { NavigationControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglNavigation]'\n})\nexport class NavigationControlDirective implements AfterContentInit {\n  /* Init inputs */\n  @Input() showCompass?: boolean;\n  @Input() showZoom?: boolean;\n\n  constructor(private MapService: MapService, @Host() private ControlComponent: ControlComponent) {}\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { showCompass?: boolean; showZoom?: boolean } = {};\n      if (this.showCompass !== undefined) {\n        options.showCompass = this.showCompass;\n      }\n      if (this.showZoom !== undefined) {\n        options.showZoom = this.showZoom;\n      }\n      this.ControlComponent.control = new NavigationControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { AfterContentInit, Directive, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ScaleControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglScale]'\n})\nexport class ScaleControlDirective implements AfterContentInit, OnChanges {\n  /* Init inputs */\n  @Input() maxWidth?: number;\n\n  /* Dynamic inputs */\n  @Input() unit?: 'imperial' | 'metric' | 'nautical';\n\n  constructor(private MapService: MapService, @Host() private ControlComponent: ControlComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.unit && !changes.unit.isFirstChange()) {\n      (<any>this.ControlComponent.control).setUnit(changes.unit.currentValue);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { maxWidth?: number; unit?: string } = {};\n      if (this.maxWidth !== undefined) {\n        options.maxWidth = this.maxWidth;\n      }\n      if (this.unit !== undefined) {\n        options.unit = this.unit;\n      }\n      this.ControlComponent.control = new ScaleControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport {\n  BackgroundLayout,\n  BackgroundPaint,\n  CircleLayout,\n  CirclePaint,\n  FillExtrusionLayout,\n  FillExtrusionPaint,\n  FillLayout,\n  FillPaint,\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  ImageSource,\n  Layer,\n  LineLayout,\n  LinePaint,\n  RasterLayout,\n  RasterPaint,\n  RasterSource,\n  SymbolLayout,\n  SymbolPaint,\n  VectorSource,\n  VideoSource,\n  MapLayerMouseEvent\n} from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, mapTo, switchMap, startWith } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-layer',\n  template: ''\n})\nexport class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {\n  /* Init inputs */\n  @Input() id: string;\n  @Input() source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;\n  @Input() type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';\n  @Input() metadata?: any;\n  @Input() sourceLayer?: string;\n\n  /* Dynamic inputs */\n  @Input() filter?: any[];\n  @Input() layout?:\n    | BackgroundLayout\n    | FillLayout\n    | FillExtrusionLayout\n    | LineLayout\n    | SymbolLayout\n    | RasterLayout\n    | CircleLayout;\n  @Input() paint?:\n    | BackgroundPaint\n    | FillPaint\n    | FillExtrusionPaint\n    | LinePaint\n    | SymbolPaint\n    | RasterPaint\n    | CirclePaint;\n  @Input() before?: string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  @Output() click = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapLayerMouseEvent>();\n\n  private layerAdded = false;\n  private sub: Subscription;\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$\n      .pipe(\n        switchMap(() =>\n          fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n            mapTo(false),\n            filter(() => !this.MapService.mapInstance.getLayer(this.id)),\n            startWith(true)\n          )\n        )\n      )\n      .subscribe((bindEvents: boolean) => this.init(bindEvents));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.layerAdded) {\n      return;\n    }\n    if (changes.paint && !changes.paint.isFirstChange()) {\n      this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue!);\n    }\n    if (changes.layout && !changes.layout.isFirstChange()) {\n      this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue!);\n    }\n    if (changes.filter && !changes.filter.isFirstChange()) {\n      this.MapService.setLayerFilter(this.id, changes.filter.currentValue!);\n    }\n    if (changes.before && !changes.before.isFirstChange()) {\n      this.MapService.setLayerBefore(this.id, changes.before.currentValue!);\n    }\n    if (\n      (changes.minzoom && !changes.minzoom.isFirstChange()) ||\n      (changes.maxzoom && !changes.maxzoom.isFirstChange())\n    ) {\n      this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.layerAdded) {\n      this.MapService.removeLayer(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private init(bindEvents: boolean) {\n    const layer = {\n      layerOptions: {\n        id: this.id,\n        type: this.type,\n        source: this.source,\n        metadata: this.metadata,\n        'source-layer': this.sourceLayer,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n        filter: this.filter,\n        layout: this.layout,\n        paint: this.paint\n      },\n      layerEvents: {\n        click: this.click,\n        mouseEnter: this.mouseEnter,\n        mouseLeave: this.mouseLeave,\n        mouseMove: this.mouseMove\n      }\n    };\n    this.MapService.addLayer(layer, bindEvents, this.before);\n    this.layerAdded = true;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  EventEmitter\n} from '@angular/core';\nimport { LngLatLike, Marker, PointLike, Anchor } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-marker',\n  template: '<div [class]=\"className\" #content><ng-content></ng-content></div>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() offset?: PointLike;\n  @Input() anchor?: Anchor;\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() draggable?: boolean;\n  @Input() popupShown?: boolean;\n  @Input() className: string;\n\n  @Output() dragStart = new EventEmitter<Marker>();\n  @Output() drag = new EventEmitter<Marker>();\n  @Output() dragEnd = new EventEmitter<Marker>();\n\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  markerInstance?: Marker;\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    if (this.feature && this.lngLat) {\n      throw new Error('feature and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.lngLat!);\n    }\n    if (changes.feature && !changes.feature.isFirstChange()) {\n      this.markerInstance!.setLngLat(<[number, number]>this.feature!.geometry!.coordinates);\n    }\n    if (changes.draggable && !changes.draggable.isFirstChange()) {\n      this.markerInstance!.setDraggable(!!this.draggable);\n    }\n    if (changes.popupShown && !changes.popupShown.isFirstChange()) {\n      changes.popupShown.currentValue\n        ? this.markerInstance!.getPopup().addTo(this.MapService.mapInstance)\n        : this.markerInstance!.getPopup().remove();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      this.markerInstance = this.MapService.addMarker({\n        markersOptions: {\n          offset: this.offset,\n          anchor: this.anchor,\n          draggable: !!this.draggable,\n          element: this.content.nativeElement,\n          feature: this.feature,\n          lngLat: this.lngLat\n        },\n        markersEvents: {\n          dragStart: this.dragStart,\n          drag: this.drag,\n          dragEnd: this.dragEnd\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeMarker(this.markerInstance!);\n    this.markerInstance = undefined;\n  }\n\n  togglePopup() {\n    this.markerInstance!.togglePopup();\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    this.markerInstance!.setLngLat(<[number, number]>coordinates);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  NgZone\n} from '@angular/core';\nimport { GeoJSONSource, GeoJSONSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { MapService } from '../../map/map.service';\n\n@Component({\n  selector: 'mgl-geojson-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoJSONSourceComponent implements OnInit, OnDestroy, OnChanges, GeoJSONSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: GeoJSON.Feature<GeoJSON.Geometry> | GeoJSON.FeatureCollection<GeoJSON.Geometry> | string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() buffer?: number;\n  @Input() tolerance?: number;\n  @Input() generateId?: boolean;\n  @Input() cluster?: boolean;\n  @Input() clusterRadius?: number;\n  @Input() clusterMaxZoom?: number;\n  @Input() clusterProperties?: any;\n\n  updateFeatureData = new Subject();\n\n  private sub = new Subscription();\n  private sourceAdded = false;\n  private featureIdCounter = 0;\n\n  constructor(private MapService: MapService, private zone: NgZone) {}\n\n  ngOnInit() {\n    if (!this.data) {\n      this.data = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    }\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata')\n        .pipe(filter(() => !this.MapService.mapInstance.getSource(this.id)))\n        .subscribe(() => {\n          this.init();\n        });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      (changes.maxzoom && !changes.maxzoom.isFirstChange()) ||\n      (changes.minzoom && !changes.minzoom.isFirstChange()) ||\n      (changes.buffer && !changes.buffer.isFirstChange()) ||\n      (changes.tolerance && !changes.tolerance.isFirstChange()) ||\n      (changes.generateId && !changes.generateId.isFirstChange()) ||\n      (changes.cluster && !changes.cluster.isFirstChange()) ||\n      (changes.clusterRadius && !changes.clusterRadius.isFirstChange()) ||\n      (changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange()) ||\n      (changes.clusterProperties && !changes.clusterProperties.isFirstChange())\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n    if (changes.data && !changes.data.isFirstChange()) {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  /**\n   * For clustered sources, fetches the zoom at which the given cluster expands.\n   * @param clusterId The value of the cluster's cluster_id property.\n   */\n  async getClusterExpansionZoom(clusterId: number) {\n    const source = this.MapService.getSource<GeoJSONSource>(this.id);\n    return this.zone.run(async () => {\n      return new Promise<number>((resolve, reject) => {\n        source.getClusterExpansionZoom(clusterId, (error, zoom) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(zoom);\n          }\n        });\n      });\n    });\n  }\n\n  /**\n   * For clustered sources, fetches the children of the given cluster on the next zoom level (as an array of GeoJSON features).\n   * @param clusterId The value of the cluster's cluster_id property.\n   */\n  async getClusterChildren(clusterId: number) {\n    const source = this.MapService.getSource<GeoJSONSource>(this.id);\n    return this.zone.run(async () => {\n      return new Promise<GeoJSON.Feature<GeoJSON.Geometry>[]>((resolve, reject) => {\n        source.getClusterChildren(clusterId, (error, features) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(features);\n          }\n        });\n      });\n    });\n  }\n\n  /**\n   * For clustered sources, fetches the original points that belong to the cluster (as an array of GeoJSON features).\n   * @param clusterId The value of the cluster's cluster_id property.\n   * @param limit The maximum number of features to return.\n   * @param offset The number of features to skip (e.g. for pagination).\n   */\n  async getClusterLeaves(clusterId: number, limit: number, offset: number) {\n    const source = this.MapService.getSource<GeoJSONSource>(this.id);\n    return this.zone.run(async () => {\n      return new Promise<GeoJSON.Feature<GeoJSON.Geometry>[]>((resolve, reject) => {\n        source.getClusterLeaves(clusterId, limit, offset, (error, features) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(features);\n          }\n        });\n      });\n    });\n  }\n\n  _addFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    collection.features.push(feature);\n    this.updateFeatureData.next();\n  }\n\n  _removeFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    const index = collection.features.indexOf(feature);\n    if (index > -1) {\n      collection.features.splice(index, 1);\n    }\n    this.updateFeatureData.next();\n  }\n\n  _getNewFeatureId() {\n    return ++this.featureIdCounter;\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, <any>{\n      // clusterProperties missing in typings\n      type: 'geojson',\n      data: this.data,\n      maxzoom: this.maxzoom,\n      minzoom: this.minzoom,\n      buffer: this.buffer,\n      tolerance: this.tolerance,\n      generateId: this.generateId,\n      cluster: this.cluster,\n      clusterRadius: this.clusterRadius,\n      clusterMaxZoom: this.clusterMaxZoom,\n      clusterProperties: this.clusterProperties\n    });\n    const sub = this.updateFeatureData.pipe(debounceTime(0)).subscribe(() => {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    });\n    this.sub.add(sub);\n    this.sourceAdded = true;\n  }\n}\n","import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeoJSONSourceComponent } from './geojson-source.component';\n\n@Component({\n  selector: 'mgl-feature',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureComponent implements OnInit, OnDestroy, GeoJSON.Feature<GeoJSON.GeometryObject> {\n  /* Init inputs */\n  @Input() id?: number; // FIXME number only for now https://github.com/mapbox/mapbox-gl-js/issues/2716\n  @Input() geometry: GeoJSON.GeometryObject;\n  @Input() properties: any;\n  type: 'Feature' = 'Feature';\n\n  private feature: GeoJSON.Feature<GeoJSON.GeometryObject>;\n\n  constructor(\n    @Inject(forwardRef(() => GeoJSONSourceComponent)) private GeoJSONSourceComponent: GeoJSONSourceComponent\n  ) {}\n\n  ngOnInit() {\n    if (!this.id) {\n      this.id = this.GeoJSONSourceComponent._getNewFeatureId();\n    }\n    this.feature = {\n      type: this.type,\n      geometry: this.geometry,\n      properties: this.properties ? this.properties : {}\n    };\n    this.feature.id = this.id;\n    this.GeoJSONSourceComponent._addFeature(this.feature);\n  }\n\n  ngOnDestroy() {\n    this.GeoJSONSourceComponent._removeFeature(this.feature);\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    (<GeoJSON.Point>this.feature.geometry).coordinates = coordinates;\n    this.GeoJSONSourceComponent.updateFeatureData.next();\n  }\n}\n","import { Directive, EventEmitter, Host, Input, NgZone, OnDestroy, OnInit, Optional, Output } from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { LayerComponent } from '../layer/layer.component';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\nimport { FeatureComponent } from '../source/geojson/feature.component';\n\n@Directive({\n  selector: '[mglDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('mglDraggable') layer?: LayerComponent;\n\n  @Output() dragStart = new EventEmitter<MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<MapMouseEvent>();\n  @Output() drag = new EventEmitter<MapMouseEvent>();\n\n  private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n\n  constructor(\n    private MapService: MapService,\n    private NgZone: NgZone,\n    @Optional() @Host() private FeatureComponent?: FeatureComponent,\n    @Optional() @Host() private MarkerComponent?: MarkerComponent\n  ) {}\n\n  ngOnInit() {\n    let enter$;\n    let leave$;\n    let updateCoords;\n    if (this.MarkerComponent) {\n      console.warn('[ngx-mapbox-gl] mglDraggable on Marker is deprecated, use draggable input instead');\n      let markerElement = <Element>this.MarkerComponent.content.nativeElement;\n      if (markerElement.children.length === 1) {\n        markerElement = markerElement.children[0];\n      }\n      enter$ = fromEvent(markerElement, 'mouseenter');\n      leave$ = fromEvent(markerElement, 'mouseleave');\n      updateCoords = this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent);\n    } else if (this.FeatureComponent && this.layer) {\n      enter$ = this.layer.mouseEnter;\n      leave$ = this.layer.mouseLeave;\n      updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);\n      if (this.FeatureComponent.geometry.type !== 'Point') {\n        throw new Error('mglDraggable only support point feature');\n      }\n    } else {\n      throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');\n    }\n\n    this.handleDraggable(enter$, leave$, updateCoords);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(undefined);\n    this.destroyed$.complete();\n  }\n\n  private handleDraggable(enter$: Observable<any>, leave$: Observable<any>, updateCoords: (coord: number[]) => void) {\n    let moving = false;\n    let inside = false;\n    this.MapService.mapCreated$.subscribe(() => {\n      const mouseUp$ = fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mouseup');\n      const dragStart$ = enter$.pipe(\n        takeUntil(this.destroyed$),\n        filter(() => !moving),\n        filter((evt) => this.filterFeature(evt)),\n        tap(() => {\n          inside = true;\n          this.MapService.changeCanvasCursor('move');\n          this.MapService.updateDragPan(false);\n        }),\n        switchMap(() => fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mousedown').pipe(takeUntil(leave$)))\n      );\n      const dragging$ = dragStart$.pipe(\n        switchMap(() =>\n          fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mousemove').pipe(takeUntil(mouseUp$))\n        )\n      );\n      const dragEnd$ = dragStart$.pipe(switchMap(() => mouseUp$.pipe(take(1))));\n      dragStart$.subscribe((evt) => {\n        moving = true;\n        if (this.dragStart.observers.length) {\n          this.NgZone.run(() => this.dragStart.emit(evt));\n        }\n      });\n      dragging$.subscribe((evt) => {\n        updateCoords([evt.lngLat.lng, evt.lngLat.lat]);\n        if (this.drag.observers.length) {\n          this.NgZone.run(() => this.drag.emit(evt));\n        }\n      });\n      dragEnd$.subscribe((evt) => {\n        moving = false;\n        if (this.dragEnd.observers.length) {\n          this.NgZone.run(() => this.dragEnd.emit(evt));\n        }\n        if (!inside) {\n          // It's possible to dragEnd outside the target (small input lag)\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        }\n      });\n      leave$\n        .pipe(\n          takeUntil(this.destroyed$),\n          tap(() => (inside = false)),\n          filter(() => !moving)\n        )\n        .subscribe(() => {\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        });\n    });\n  }\n\n  private filterFeature(evt: MapMouseEvent) {\n    if (this.FeatureComponent && this.layer) {\n      const feature: GeoJSON.Feature<any> = this.MapService.queryRenderedFeatures(evt.point, {\n        layers: [this.layer.id],\n        filter: ['all', ['==', '$type', 'Point'], ['==', '$id', this.FeatureComponent.id]]\n      })[0];\n      if (!feature) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, startWith, switchMap } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\nimport { MapImageData, MapImageOptions } from '../map/map.types';\n\n@Component({\n  selector: 'mgl-image',\n  template: ''\n})\nexport class ImageComponent implements OnInit, OnDestroy, OnChanges {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: MapImageData;\n  @Input() options?: MapImageOptions;\n  @Input() url?: string;\n\n  @Output() error = new EventEmitter<{ status: number }>();\n  @Output() loaded = new EventEmitter<void>();\n\n  private isAdded = false;\n  private isAdding = false;\n  private sub: Subscription;\n\n  constructor(private MapService: MapService, private zone: NgZone) {}\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$\n      .pipe(\n        switchMap(() =>\n          fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n            startWith(undefined),\n            filter(() => !this.isAdding && !this.MapService.mapInstance.hasImage(this.id))\n          )\n        )\n      )\n      .subscribe(() => this.init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      (changes.data && !changes.data.isFirstChange()) ||\n      (changes.options && !changes.options.isFirstChange()) ||\n      (changes.url && !changes.url.isFirstChange())\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.isAdded) {\n      this.MapService.removeImage(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private async init() {\n    this.isAdding = true;\n    if (this.data) {\n      this.MapService.addImage(this.id, this.data, this.options);\n      this.isAdded = true;\n      this.isAdding = false;\n    } else if (this.url) {\n      try {\n        await this.MapService.loadAndAddImage(this.id, this.url, this.options);\n        this.isAdded = true;\n        this.isAdding = false;\n        this.zone.run(() => {\n          this.loaded.emit();\n        });\n      } catch (error) {\n        this.zone.run(() => {\n          this.error.emit(error);\n        });\n      }\n    }\n  }\n}\n","import {\n  AnimationOptions,\n  EventData,\n  FitBoundsOptions,\n  LngLatBoundsLike,\n  LngLatLike,\n  Map,\n  MapBoxZoomEvent,\n  MapMouseEvent,\n  MapTouchEvent,\n  PointLike,\n  Style\n} from 'mapbox-gl';\nimport { MapService, MovingOptions } from './map.service';\nimport { MapEvent } from './map.types';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'mgl-map',\n  template: '<div #container></div>',\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n      div {\n        height: 100%;\n        width: 100%;\n      }\n    `\n  ],\n  providers: [MapService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnChanges, OnDestroy, AfterViewInit, MapEvent {\n  /* Init inputs */\n  @Input() accessToken?: string;\n  @Input() customMapboxApiUrl?: string;\n  @Input() hash?: boolean;\n  @Input() refreshExpiredTiles?: boolean;\n  @Input() failIfMajorPerformanceCaveat?: boolean;\n  @Input() classes?: string[];\n  @Input() bearingSnap?: number;\n  @Input() interactive?: boolean;\n  @Input() pitchWithRotate?: boolean;\n  @Input() clickTolerance?: number;\n  @Input() attributionControl?: boolean;\n  @Input() logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  @Input() maxTileCacheSize?: number;\n  @Input() localIdeographFontFamily?: string;\n  @Input() preserveDrawingBuffer?: boolean;\n  @Input() renderWorldCopies?: boolean;\n  @Input() trackResize?: boolean;\n  @Input() transformRequest?: Function;\n  @Input() bounds?: LngLatBoundsLike; // Use fitBounds for dynamic input\n  @Input() antialias?: boolean;\n  @Input() locale: { [key: string]: string };\n\n  /* Dynamic inputs */\n  @Input() minZoom?: number;\n  @Input() maxZoom?: number;\n  @Input() scrollZoom?: boolean;\n  @Input() dragRotate?: boolean;\n  @Input() touchZoomRotate?: boolean;\n  @Input() doubleClickZoom?: boolean;\n  @Input() keyboard?: boolean;\n  @Input() dragPan?: boolean;\n  @Input() boxZoom?: boolean;\n  @Input() style: Style | string;\n  @Input() center?: LngLatLike;\n  @Input() maxBounds?: LngLatBoundsLike;\n  @Input() zoom?: [number];\n  @Input() bearing?: [number];\n  @Input() pitch?: [number];\n  @Input() fitBoundsOptions?: FitBoundsOptions; // First value goes to options.fitBoundsOptions. Subsequents changes are passed to fitBounds\n\n  /* Added by ngx-mapbox-gl */\n  @Input() movingMethod: 'jumpTo' | 'easeTo' | 'flyTo' = 'flyTo';\n  @Input() movingOptions?: MovingOptions;\n  // => First value is a alias to bounds input (since mapbox 0.53.0). Subsequents changes are passed to fitBounds\n  @Input() fitBounds?: LngLatBoundsLike;\n  @Input() fitScreenCoordinates?: [PointLike, PointLike];\n  @Input() centerWithPanTo?: boolean;\n  @Input() panToOptions?: AnimationOptions;\n  @Input() cursorStyle?: string;\n\n  @Output() resize = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n  @Output() mouseDown = new EventEmitter<MapMouseEvent>();\n  @Output() mouseUp = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() dblClick = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOver = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOut = new EventEmitter<MapMouseEvent>();\n  @Output() contextMenu = new EventEmitter<MapMouseEvent>();\n  @Output() touchStart = new EventEmitter<MapTouchEvent>();\n  @Output() touchEnd = new EventEmitter<MapTouchEvent>();\n  @Output() touchMove = new EventEmitter<MapTouchEvent>();\n  @Output() touchCancel = new EventEmitter<MapTouchEvent>();\n  @Output() wheel = new EventEmitter<any>(); // TODO MapWheelEvent\n  @Output() moveStart = new EventEmitter<DragEvent>(); // TODO Check type\n  @Output() move = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() moveEnd = new EventEmitter<DragEvent>();\n  @Output() dragStart = new EventEmitter<DragEvent>();\n  @Output() drag = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<DragEvent>();\n  @Output() zoomStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEvt = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotate = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() pitchStart = new EventEmitter<EventData>();\n  @Output() pitchEvt = new EventEmitter<EventData>();\n  @Output() pitchEnd = new EventEmitter<EventData>();\n  @Output() boxZoomStart = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomEnd = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomCancel = new EventEmitter<MapBoxZoomEvent>();\n  @Output() webGlContextLost = new EventEmitter<void>();\n  @Output() webGlContextRestored = new EventEmitter<void>();\n  @Output() load = new EventEmitter<any>();\n  @Output() idle = new EventEmitter<void>();\n  @Output() render = new EventEmitter<void>();\n  @Output() error = new EventEmitter<any>(); // TODO Check type\n  @Output() data = new EventEmitter<EventData>();\n  @Output() styleData = new EventEmitter<EventData>();\n  @Output() sourceData = new EventEmitter<EventData>();\n  @Output() dataLoading = new EventEmitter<EventData>();\n  @Output() styleDataLoading = new EventEmitter<EventData>();\n  @Output() sourceDataLoading = new EventEmitter<EventData>();\n  @Output() styleImageMissing = new EventEmitter<{ id: string }>();\n\n  get mapInstance(): Map {\n    return this.MapService.mapInstance;\n  }\n\n  @ViewChild('container', { static: true }) mapContainer: ElementRef;\n\n  constructor(private MapService: MapService) {}\n\n  ngAfterViewInit() {\n    this.MapService.setup({\n      accessToken: this.accessToken,\n      customMapboxApiUrl: this.customMapboxApiUrl,\n      mapOptions: {\n        container: this.mapContainer.nativeElement,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        style: this.style,\n        hash: this.hash,\n        interactive: this.interactive,\n        bearingSnap: this.bearingSnap,\n        pitchWithRotate: this.pitchWithRotate,\n        clickTolerance: this.clickTolerance,\n        classes: this.classes,\n        attributionControl: this.attributionControl,\n        logoPosition: this.logoPosition,\n        failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,\n        preserveDrawingBuffer: this.preserveDrawingBuffer,\n        refreshExpiredTiles: this.refreshExpiredTiles,\n        maxBounds: this.maxBounds,\n        scrollZoom: this.scrollZoom,\n        boxZoom: this.boxZoom,\n        dragRotate: this.dragRotate,\n        dragPan: this.dragPan,\n        keyboard: this.keyboard,\n        doubleClickZoom: this.doubleClickZoom,\n        touchZoomRotate: this.touchZoomRotate,\n        trackResize: this.trackResize,\n        center: this.center,\n        zoom: this.zoom,\n        bearing: this.bearing,\n        pitch: this.pitch,\n        renderWorldCopies: this.renderWorldCopies,\n        maxTileCacheSize: this.maxTileCacheSize,\n        localIdeographFontFamily: this.localIdeographFontFamily,\n        transformRequest: this.transformRequest,\n        bounds: this.bounds ? this.bounds : this.fitBounds,\n        fitBoundsOptions: this.fitBoundsOptions,\n        antialias: this.antialias,\n        locale: this.locale\n      },\n      mapEvents: this\n    });\n    if (this.cursorStyle) {\n      this.MapService.changeCanvasCursor(this.cursorStyle);\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.destroyMap();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    await this.MapService.mapCreated$.toPromise();\n    if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {\n      this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);\n    }\n    if (changes.minZoom && !changes.minZoom.isFirstChange()) {\n      this.MapService.updateMinZoom(changes.minZoom.currentValue);\n    }\n    if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {\n      this.MapService.updateMaxZoom(changes.maxZoom.currentValue);\n    }\n    if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {\n      this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);\n    }\n    if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {\n      this.MapService.updateDragRotate(changes.dragRotate.currentValue);\n    }\n    if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {\n      this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);\n    }\n    if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {\n      this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);\n    }\n    if (changes.keyboard && !changes.keyboard.isFirstChange()) {\n      this.MapService.updateKeyboard(changes.keyboard.currentValue);\n    }\n    if (changes.dragPan && !changes.dragPan.isFirstChange()) {\n      this.MapService.updateDragPan(changes.dragPan.currentValue);\n    }\n    if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {\n      this.MapService.updateBoxZoom(changes.boxZoom.currentValue);\n    }\n    if (changes.style && !changes.style.isFirstChange()) {\n      this.MapService.updateStyle(changes.style.currentValue);\n    }\n    if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {\n      this.MapService.updateMaxBounds(changes.maxBounds.currentValue);\n    }\n    if (changes.fitBounds && changes.fitBounds.currentValue && !changes.fitBounds.isFirstChange()) {\n      this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);\n    }\n    if (changes.fitScreenCoordinates && changes.fitScreenCoordinates.currentValue) {\n      if ((this.center || this.zoom || this.pitch || this.fitBounds) && changes.fitScreenCoordinates.isFirstChange()) {\n        console.warn(\n          '[ngx-mapbox-gl] center / zoom / pitch / fitBounds inputs are being overridden by fitScreenCoordinates input'\n        );\n      }\n      this.MapService.fitScreenCoordinates(\n        changes.fitScreenCoordinates.currentValue,\n        this.bearing ? this.bearing[0] : 0,\n        this.movingOptions\n      );\n    }\n    if (\n      this.centerWithPanTo &&\n      changes.center &&\n      !changes.center.isFirstChange() &&\n      !changes.zoom &&\n      !changes.bearing &&\n      !changes.pitch\n    ) {\n      this.MapService.panTo(this.center!, this.panToOptions);\n    } else if (\n      (changes.center && !changes.center.isFirstChange()) ||\n      (changes.zoom && !changes.zoom.isFirstChange()) ||\n      (changes.bearing && !changes.bearing.isFirstChange() && !changes.fitScreenCoordinates) ||\n      (changes.pitch && !changes.pitch.isFirstChange())\n    ) {\n      this.MapService.move(\n        this.movingMethod,\n        this.movingOptions,\n        changes.zoom && this.zoom ? this.zoom[0] : undefined,\n        changes.center ? this.center : undefined,\n        changes.bearing && this.bearing ? this.bearing[0] : undefined,\n        changes.pitch && this.pitch ? this.pitch[0] : undefined\n      );\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport { MapboxGeoJSONFeature, MapSourceDataEvent } from 'mapbox-gl';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { filter, startWith, switchMap } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Directive({ selector: 'ng-template[mglPoint]' })\nexport class PointDirective {}\n\n@Directive({ selector: 'ng-template[mglClusterPoint]' })\nexport class ClusterPointDirective {}\n\nlet uniqId = 0;\n\n@Component({\n  selector: 'mgl-markers-for-clusters',\n  template: `\n    <mgl-layer [id]=\"layerId\" [source]=\"source\" type=\"circle\" [paint]=\"{ 'circle-radius': 0 }\"></mgl-layer>\n    <ng-container *ngFor=\"let feature of clusterPoints; trackBy: trackByClusterPoint\">\n      <ng-container *ngIf=\"feature.properties.cluster\">\n        <mgl-marker [feature]=\"feature\">\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-container *ngIf=\"!feature.properties.cluster\">\n        <mgl-marker [feature]=\"feature\">\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkersForClustersComponent implements OnDestroy, AfterContentInit {\n  /* Init input */\n  @Input() source: string;\n\n  @ContentChild(PointDirective, { read: TemplateRef, static: false }) pointTpl?: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef, static: false }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: MapboxGeoJSONFeature[]; // Incorrect typings\n  layerId = `mgl-markers-for-clusters-${uniqId++}`;\n\n  private sub = new Subscription();\n\n  constructor(private MapService: MapService, private ChangeDetectorRef: ChangeDetectorRef, private zone: NgZone) {}\n\n  ngAfterContentInit() {\n    const clusterDataUpdate = () =>\n      fromEvent<MapSourceDataEvent>(<any>this.MapService.mapInstance, 'data').pipe(\n        filter(\n          (e) =>\n            e.sourceId === this.source &&\n            e.sourceDataType !== 'metadata' &&\n            this.MapService.mapInstance.isSourceLoaded(this.source)\n        )\n      );\n    const sub = this.MapService.mapCreated$\n      .pipe(\n        switchMap(clusterDataUpdate),\n        switchMap(() =>\n          merge(\n            fromEvent(<any>this.MapService.mapInstance, 'move'),\n            fromEvent(<any>this.MapService.mapInstance, 'moveend')\n          ).pipe(startWith<any>(undefined))\n        )\n      )\n      .subscribe(() => {\n        this.zone.run(() => {\n          this.updateCluster();\n        });\n      });\n    this.sub.add(sub);\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  trackByClusterPoint(_index: number, clusterPoint: { id: number }) {\n    return clusterPoint.id;\n  }\n\n  private updateCluster() {\n    // Invalid queryRenderedFeatures typing\n    const params: any = { layers: [this.layerId] };\n    if (!this.pointTpl) {\n      params.filter = ['==', 'cluster', true];\n    }\n    this.clusterPoints = this.MapService.mapInstance.queryRenderedFeatures(params);\n    this.ChangeDetectorRef.markForCheck();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { PointLike, Popup, LngLatLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\n\n@Component({\n  selector: 'mgl-popup',\n  template: '<div #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() closeButton?: boolean;\n  @Input() closeOnClick?: boolean;\n  @Input() anchor?: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left';\n  @Input() offset?: number | PointLike | { [anchor: string]: [number, number] };\n  @Input() className?: string;\n  @Input() maxWidth?: string;\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() marker?: MarkerComponent;\n\n  @Output() close = new EventEmitter<void>();\n  @Output() open = new EventEmitter<void>();\n\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  popupInstance?: Popup;\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    if ((this.lngLat && this.marker) || (this.feature && this.lngLat) || (this.feature && this.marker)) {\n      throw new Error('marker, lngLat, feature input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.lngLat && !changes.lngLat.isFirstChange()) || (changes.feature && !changes.feature.isFirstChange())) {\n      const newlngLat = changes.lngLat ? this.lngLat! : <[number, number]>this.feature!.geometry!.coordinates!;\n      this.MapService.removePopupFromMap(this.popupInstance!, true);\n      const popupInstanceTmp = this.createPopup();\n      this.MapService.addPopupToMap(popupInstanceTmp, newlngLat, this.popupInstance!.isOpen());\n      this.popupInstance = popupInstanceTmp;\n    }\n    if (changes.marker && !changes.marker.isFirstChange()) {\n      const previousMarker: MarkerComponent = changes.marker.previousValue;\n      if (previousMarker.markerInstance) {\n        this.MapService.removePopupFromMarker(previousMarker.markerInstance);\n      }\n      if (this.marker && this.marker.markerInstance && this.popupInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, this.popupInstance);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.popupInstance = this.createPopup();\n    this.addPopup(this.popupInstance);\n  }\n\n  ngOnDestroy() {\n    if (this.popupInstance) {\n      if (this.lngLat || this.feature) {\n        this.MapService.removePopupFromMap(this.popupInstance);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.removePopupFromMarker(this.marker.markerInstance);\n      }\n    }\n    this.popupInstance = undefined;\n  }\n\n  private createPopup() {\n    return this.MapService.createPopup(\n      {\n        popupOptions: {\n          closeButton: this.closeButton,\n          closeOnClick: this.closeOnClick,\n          anchor: this.anchor,\n          offset: this.offset,\n          className: this.className,\n          maxWidth: this.maxWidth\n        },\n        popupEvents: {\n          open: this.open,\n          close: this.close\n        }\n      },\n      this.content.nativeElement\n    );\n  }\n\n  private addPopup(popup: Popup) {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.lngLat || this.feature) {\n        this.MapService.addPopupToMap(\n          popup,\n          this.lngLat ? this.lngLat : <[number, number]>this.feature!.geometry!.coordinates!\n        );\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, popup);\n      } else {\n        throw new Error('mgl-popup need either lngLat/marker/feature to be set');\n      }\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CanvasSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-canvas-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CanvasSourceComponent implements OnInit, OnDestroy, OnChanges, CanvasSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() coordinates: number[][];\n  @Input() canvas: string;\n  @Input() animate?: boolean;\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata')\n        .pipe(filter(() => !this.MapService.mapInstance.getSource(this.id)))\n        .subscribe(() => {\n          this.init();\n        });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      (changes.coordinates && !changes.coordinates.isFirstChange()) ||\n      (changes.canvas && !changes.canvas.isFirstChange()) ||\n      (changes.animate && !changes.animate.isFirstChange())\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'canvas',\n      coordinates: this.coordinates,\n      canvas: this.canvas,\n      animate: this.animate\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ImageSource, ImageSourceOptions, ImageSourceRaw } from 'mapbox-gl';\nimport { Subscription } from 'rxjs';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-image-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent implements OnInit, OnDestroy, OnChanges, ImageSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() coordinates: number[][];\n\n  private sub: Subscription;\n  private sourceId?: string;\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$.subscribe(() => this.init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.sourceId === undefined) {\n      return;\n    }\n\n    const source = this.MapService.getSource<ImageSource>(this.sourceId);\n    source.updateImage({\n      url: changes.url === undefined ? undefined : this.url,\n      coordinates: changes.coordinates === undefined ? undefined : this.coordinates\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n\n    if (this.sourceId !== undefined) {\n      this.MapService.removeSource(this.sourceId);\n    }\n  }\n\n  private init() {\n    const imageSource: ImageSourceRaw = {\n      type: 'image',\n      url: this.url,\n      coordinates: this.coordinates\n    };\n    this.MapService.addSource(this.id, imageSource);\n    this.sourceId = this.id;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { RasterSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-raster-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() tiles?: string[];\n  @Input() bounds?: number[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() tileSize?: number;\n\n  type: 'raster' = 'raster'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata')\n        .pipe(filter(() => !this.MapService.mapInstance.getSource(this.id)))\n        .subscribe(() => {\n          this.init();\n        });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      (changes.url && !changes.url.isFirstChange()) ||\n      (changes.tiles && !changes.tiles.isFirstChange()) ||\n      (changes.bounds && !changes.bounds.isFirstChange()) ||\n      (changes.minzoom && !changes.minzoom.isFirstChange()) ||\n      (changes.maxzoom && !changes.maxzoom.isFirstChange()) ||\n      (changes.tileSize && !changes.tileSize.isFirstChange())\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      bounds: this.bounds,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n      tileSize: this.tileSize\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VectorSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-vector-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent implements OnInit, OnDestroy, OnChanges, VectorSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url?: string;\n  @Input() tiles?: string[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  type: 'vector' = 'vector'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata')\n        .pipe(filter(() => !this.MapService.mapInstance.getSource(this.id)))\n        .subscribe(() => {\n          this.init();\n        });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      (changes.url && !changes.url.isFirstChange()) ||\n      (changes.tiles && !changes.tiles.isFirstChange()) ||\n      (changes.minzoom && !changes.minzoom.isFirstChange()) ||\n      (changes.maxzoom && !changes.maxzoom.isFirstChange())\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VideoSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-video-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoSourceComponent implements OnInit, OnDestroy, OnChanges, VideoSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() urls: string[];\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(private MapService: MapService) {}\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata')\n        .pipe(filter(() => !this.MapService.mapInstance.getSource(this.id)))\n        .subscribe(() => {\n          this.init();\n        });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      (changes.urls && !changes.urls.isFirstChange()) ||\n      (changes.coordinates && !changes.coordinates.isFirstChange())\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'video',\n      urls: this.urls,\n      coordinates: this.coordinates\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AttributionControlDirective } from './control/attribution-control.directive';\nimport { ControlComponent } from './control/control.component';\nimport { FullscreenControlDirective } from './control/fullscreen-control.directive';\nimport { GeocoderControlDirective, MAPBOX_GEOCODER_API_KEY } from './control/geocoder-control.directive';\nimport { GeolocateControlDirective } from './control/geolocate-control.directive';\nimport { NavigationControlDirective } from './control/navigation-control.directive';\nimport { ScaleControlDirective } from './control/scale-control.directive';\nimport { DraggableDirective } from './draggable/draggable.directive';\nimport { ImageComponent } from './image/image.component';\nimport { LayerComponent } from './layer/layer.component';\nimport { MapComponent } from './map/map.component';\nimport { MAPBOX_API_KEY } from './map/map.service';\nimport { MarkerComponent } from './marker/marker.component';\nimport {\n  ClusterPointDirective,\n  PointDirective,\n  MarkersForClustersComponent\n} from './markers-for-clusters/markers-for-clusters.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { CanvasSourceComponent } from './source/canvas-source.component';\nimport { FeatureComponent } from './source/geojson/feature.component';\nimport { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';\nimport { ImageSourceComponent } from './source/image-source.component';\nimport { RasterSourceComponent } from './source/raster-source.component';\nimport { VectorSourceComponent } from './source/vector-source.component';\nimport { VideoSourceComponent } from './source/video-source.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkersForClustersComponent\n  ],\n  exports: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkersForClustersComponent\n  ]\n})\nexport class NgxMapboxGLModule {\n  static withConfig(config: { accessToken: string; geocoderAccessToken?: string }): ModuleWithProviders {\n    return {\n      ngModule: NgxMapboxGLModule,\n      providers: [\n        {\n          provide: MAPBOX_API_KEY,\n          useValue: config.accessToken\n        },\n        {\n          provide: MAPBOX_GEOCODER_API_KEY,\n          useValue: config.geocoderAccessToken || config.accessToken\n        }\n      ]\n    };\n  }\n}\n"]}