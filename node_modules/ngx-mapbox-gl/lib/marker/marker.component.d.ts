import { AfterViewInit, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges, EventEmitter } from '@angular/core';
import { LngLatLike, Marker, PointLike, Anchor } from 'mapbox-gl';
import { MapService } from '../map/map.service';
import * as ɵngcc0 from '@angular/core';
export declare class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {
    private MapService;
    offset?: PointLike;
    anchor?: Anchor;
    feature?: GeoJSON.Feature<GeoJSON.Point>;
    lngLat?: LngLatLike;
    draggable?: boolean;
    popupShown?: boolean;
    className: string;
    dragStart: EventEmitter<Marker>;
    drag: EventEmitter<Marker>;
    dragEnd: EventEmitter<Marker>;
    content: ElementRef;
    markerInstance?: Marker;
    constructor(MapService: MapService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    togglePopup(): void;
    updateCoordinates(coordinates: number[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MarkerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MarkerComponent, "mgl-marker", never, {
    "offset": "offset";
    "anchor": "anchor";
    "feature": "feature";
    "lngLat": "lngLat";
    "draggable": "draggable";
    "popupShown": "popupShown";
    "className": "className";
}, {
    "dragStart": "dragStart";
    "drag": "drag";
    "dragEnd": "dragEnd";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2VyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtYXJrZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTG5nTGF0TGlrZSwgTWFya2VyLCBQb2ludExpa2UsIEFuY2hvciB9IGZyb20gJ21hcGJveC1nbCc7XHJcbmltcG9ydCB7IE1hcFNlcnZpY2UgfSBmcm9tICcuLi9tYXAvbWFwLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXJrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCwgT25Jbml0IHtcclxuICAgIHByaXZhdGUgTWFwU2VydmljZTtcclxuICAgIG9mZnNldD86IFBvaW50TGlrZTtcclxuICAgIGFuY2hvcj86IEFuY2hvcjtcclxuICAgIGZlYXR1cmU/OiBHZW9KU09OLkZlYXR1cmU8R2VvSlNPTi5Qb2ludD47XHJcbiAgICBsbmdMYXQ/OiBMbmdMYXRMaWtlO1xyXG4gICAgZHJhZ2dhYmxlPzogYm9vbGVhbjtcclxuICAgIHBvcHVwU2hvd24/OiBib29sZWFuO1xyXG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBkcmFnU3RhcnQ6IEV2ZW50RW1pdHRlcjxNYXJrZXI+O1xyXG4gICAgZHJhZzogRXZlbnRFbWl0dGVyPE1hcmtlcj47XHJcbiAgICBkcmFnRW5kOiBFdmVudEVtaXR0ZXI8TWFya2VyPjtcclxuICAgIGNvbnRlbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICBtYXJrZXJJbnN0YW5jZT86IE1hcmtlcjtcclxuICAgIGNvbnN0cnVjdG9yKE1hcFNlcnZpY2U6IE1hcFNlcnZpY2UpO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgdG9nZ2xlUG9wdXAoKTogdm9pZDtcclxuICAgIHVwZGF0ZUNvb3JkaW5hdGVzKGNvb3JkaW5hdGVzOiBudW1iZXJbXSk6IHZvaWQ7XHJcbn1cclxuIl19