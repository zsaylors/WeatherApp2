import { EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { BackgroundLayout, BackgroundPaint, CircleLayout, CirclePaint, FillExtrusionLayout, FillExtrusionPaint, FillLayout, FillPaint, GeoJSONSource, GeoJSONSourceRaw, ImageSource, Layer, LineLayout, LinePaint, RasterLayout, RasterPaint, RasterSource, SymbolLayout, SymbolPaint, VectorSource, VideoSource, MapLayerMouseEvent } from 'mapbox-gl';
import { MapService } from '../map/map.service';
import * as ɵngcc0 from '@angular/core';
export declare class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {
    private MapService;
    id: string;
    source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;
    type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';
    metadata?: any;
    sourceLayer?: string;
    filter?: any[];
    layout?: BackgroundLayout | FillLayout | FillExtrusionLayout | LineLayout | SymbolLayout | RasterLayout | CircleLayout;
    paint?: BackgroundPaint | FillPaint | FillExtrusionPaint | LinePaint | SymbolPaint | RasterPaint | CirclePaint;
    before?: string;
    minzoom?: number;
    maxzoom?: number;
    click: EventEmitter<MapLayerMouseEvent>;
    mouseEnter: EventEmitter<MapLayerMouseEvent>;
    mouseLeave: EventEmitter<MapLayerMouseEvent>;
    mouseMove: EventEmitter<MapLayerMouseEvent>;
    private layerAdded;
    private sub;
    constructor(MapService: MapService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private init;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LayerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LayerComponent, "mgl-layer", never, {
    "id": "id";
    "source": "source";
    "type": "type";
    "metadata": "metadata";
    "sourceLayer": "sourceLayer";
    "filter": "filter";
    "layout": "layout";
    "paint": "paint";
    "before": "before";
    "minzoom": "minzoom";
    "maxzoom": "maxzoom";
}, {
    "click": "click";
    "mouseEnter": "mouseEnter";
    "mouseLeave": "mouseLeave";
    "mouseMove": "mouseMove";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImxheWVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmFja2dyb3VuZExheW91dCwgQmFja2dyb3VuZFBhaW50LCBDaXJjbGVMYXlvdXQsIENpcmNsZVBhaW50LCBGaWxsRXh0cnVzaW9uTGF5b3V0LCBGaWxsRXh0cnVzaW9uUGFpbnQsIEZpbGxMYXlvdXQsIEZpbGxQYWludCwgR2VvSlNPTlNvdXJjZSwgR2VvSlNPTlNvdXJjZVJhdywgSW1hZ2VTb3VyY2UsIExheWVyLCBMaW5lTGF5b3V0LCBMaW5lUGFpbnQsIFJhc3RlckxheW91dCwgUmFzdGVyUGFpbnQsIFJhc3RlclNvdXJjZSwgU3ltYm9sTGF5b3V0LCBTeW1ib2xQYWludCwgVmVjdG9yU291cmNlLCBWaWRlb1NvdXJjZSwgTWFwTGF5ZXJNb3VzZUV2ZW50IH0gZnJvbSAnbWFwYm94LWdsJztcclxuaW1wb3J0IHsgTWFwU2VydmljZSB9IGZyb20gJy4uL21hcC9tYXAuc2VydmljZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcywgTGF5ZXIge1xyXG4gICAgcHJpdmF0ZSBNYXBTZXJ2aWNlO1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIHNvdXJjZT86IHN0cmluZyB8IFZlY3RvclNvdXJjZSB8IFJhc3RlclNvdXJjZSB8IEdlb0pTT05Tb3VyY2UgfCBJbWFnZVNvdXJjZSB8IFZpZGVvU291cmNlIHwgR2VvSlNPTlNvdXJjZVJhdztcclxuICAgIHR5cGU6ICdzeW1ib2wnIHwgJ2ZpbGwnIHwgJ2xpbmUnIHwgJ2NpcmNsZScgfCAnZmlsbC1leHRydXNpb24nIHwgJ3Jhc3RlcicgfCAnYmFja2dyb3VuZCc7XHJcbiAgICBtZXRhZGF0YT86IGFueTtcclxuICAgIHNvdXJjZUxheWVyPzogc3RyaW5nO1xyXG4gICAgZmlsdGVyPzogYW55W107XHJcbiAgICBsYXlvdXQ/OiBCYWNrZ3JvdW5kTGF5b3V0IHwgRmlsbExheW91dCB8IEZpbGxFeHRydXNpb25MYXlvdXQgfCBMaW5lTGF5b3V0IHwgU3ltYm9sTGF5b3V0IHwgUmFzdGVyTGF5b3V0IHwgQ2lyY2xlTGF5b3V0O1xyXG4gICAgcGFpbnQ/OiBCYWNrZ3JvdW5kUGFpbnQgfCBGaWxsUGFpbnQgfCBGaWxsRXh0cnVzaW9uUGFpbnQgfCBMaW5lUGFpbnQgfCBTeW1ib2xQYWludCB8IFJhc3RlclBhaW50IHwgQ2lyY2xlUGFpbnQ7XHJcbiAgICBiZWZvcmU/OiBzdHJpbmc7XHJcbiAgICBtaW56b29tPzogbnVtYmVyO1xyXG4gICAgbWF4em9vbT86IG51bWJlcjtcclxuICAgIGNsaWNrOiBFdmVudEVtaXR0ZXI8TWFwTGF5ZXJNb3VzZUV2ZW50PjtcclxuICAgIG1vdXNlRW50ZXI6IEV2ZW50RW1pdHRlcjxNYXBMYXllck1vdXNlRXZlbnQ+O1xyXG4gICAgbW91c2VMZWF2ZTogRXZlbnRFbWl0dGVyPE1hcExheWVyTW91c2VFdmVudD47XHJcbiAgICBtb3VzZU1vdmU6IEV2ZW50RW1pdHRlcjxNYXBMYXllck1vdXNlRXZlbnQ+O1xyXG4gICAgcHJpdmF0ZSBsYXllckFkZGVkO1xyXG4gICAgcHJpdmF0ZSBzdWI7XHJcbiAgICBjb25zdHJ1Y3RvcihNYXBTZXJ2aWNlOiBNYXBTZXJ2aWNlKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGluaXQ7XHJcbn1cclxuIl19